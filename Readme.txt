ReadmeTo run the code, you need to go to task.py, where there are individual cells. Before running individual cells, you need to import all the libraries at the top of the module.?To run the code, first input sim = S.Simulation(?n, m, ball_R, r , v  , con_R , M  , v_factor  ), where n is square root of the number of balls (this code only works for n2 number of balls, m is the mass of the ball, ball_R is the radius of the ball, r is the position of the centre of the container, v is the velocity of the container, M is the mass of the container (which is usually set to 10**100, v_factor is the scaling factor of the velocity (which can be used to vary the speed  of the balls)To run the simulation use sim.run(? num_frames, animate=False, graphs=False , Max_Boltzmann = False, Pressure= False), where num_frames is the number of frames. If the animation is required, put animate =True, else put False. This is same for graphs, Max_Boltzmann and Pressure, where graphs refers to a collection of graphs, including the velocity distribution, kinetic energy and the distance of balls from centre, Max_Boltzmann corresponds to the fitting of the Maxwell-Boltzmann distribution to the velocity distribution and pressure refers to if the values of temperature and pressure are required.Each cell needs to be run individually, to avoid figures overlapping.